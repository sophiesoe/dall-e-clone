import React from "react";
import { useState, useEffect } from "react";
import { Card, Loader, FormField } from "../components";

const RenderCards = ({ data, title }) => {
  if (data.length > 0) {
    return data.map((post) => <Card key={post._id} {...post} />);
  }
  return (
    <h2 className="mt-5 font-bold text-[#6469ff] text-md uppercase">{title}</h2>
  );
};

function Home() {
  const [isLoading, setIsLoading] = useState(false);
  const [allPosts, setAllPosts] = useState([]);
  const [searchText, setSearchText] = useState("");
  const [searchResult, setSearchResult] = useState([]);
  const [searchTimeout, setSearchTimeout] = useState(null);
  const fetchAllPosts = async () => {
    setIsLoading(true);
    try {
      const res = await fetch(
        "https://dall-e-clone-qlne.onrender.com/api/v1/posts",
        {
          method: "GET",
          headers: {
            "Content-Type": "application/json",
          },
        }
      );
      if (res.ok) {
        const result = await res.json();
        setAllPosts(result.data.reverse());
      } else {
        alert("Something went wrong. Please try again");
      }
    } catch (error) {
      alert(error);
    } finally {
      setIsLoading(false);
    }
  };
  useEffect(() => {
    fetchAllPosts();
  }, []);
  const searchHandler = (e) => {
    clearTimeout(searchTimeout);
    setSearchText(e.target.value);
    setSearchTimeout(
      setTimeout(() => {
        const searchResults = allPosts.filter(
          (item) =>
            item.name.toLowerCase().includes(searchText.toLowerCase()) ||
            item.prompt.toLowerCase().includes(searchText.toLowerCase())
        );
        setSearchResult(searchResults);
      }, 500)
    );
  };
  return (
    <section className="max-w-7xl mx-auto">
      <div>
        <h1 className="font-extrabold text-[#222328] text-[1.5rem]">
          Community Showcase
        </h1>
        <p className="mt-2 text-[#666e75] text-[1rem] max-w-[40rem]">
          Browse through the collections of imaginative and visually stunning
          generated by DALL-E AI
        </p>
      </div>
      <div className="mt-16">
        <FormField
          type="text"
          name="text"
          labelName="Search Posts"
          placeholder="Search..."
          value={searchText}
          handleChange={searchHandler}
        />
      </div>
      <div className="mt-10">
        {isLoading ? (
          <div className="flex justify-center items-center">
            <Loader />
          </div>
        ) : (
          <div>
            {searchText && (
              <h2 className="text-[#666e75] text-xl font-medium mb-3">
                Showing search for{" "}
                <span className="text-[#222328]">{searchText}</span>
              </h2>
            )}
            <div className="grid lg:grid-cols-5 sm:grid-cols-3 xs:grid-cols-2 grid-col-1 gap-3">
              {searchText ? (
                <RenderCards
                  data={searchResult}
                  title="No search results found"
                />
              ) : (
                <RenderCards data={allPosts} title="No posts found" />
              )}
            </div>
          </div>
        )}
      </div>
    </section>
  );
}

export default Home;
